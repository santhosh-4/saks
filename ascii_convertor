
ARRAY_PTR ascii_converter(unsigned long l_num,char* string_ptr,ARRAY_PTR addres_ptr,unsigned int size)//number,(string or array pointer),to addrees,size if array poiter
{
/***********************************************************************************************************************
* File Name    : GENERIC FUNC
* Version      : V1.00.00.00 [17 06 2016]
* Device(s)    : ALL
* Description  : This file handles strings
* Creation Date: 17/06/2020

* SAMPLE
        ptr_lctn.ptr_location=c_ln.disp._TIT_le_id,ptr_lctn.size=sizeof(c_ln.disp._TIT_le_id);
	
	ARRAY TO ARRAY COPY
	
        ptr_lctn=ascii_converter(0,demo_title,ptr_lctn,0);
	
	DECIMAL TO ASCII CONVER AND COPY
	ptr_lctn=ascii_converter(56,NULL_CH,ptr_lctn,0);
	    
	    STRING COPY
        ptr_lctn=ascii_converter(0,"TB ",ptr_lctn,0);
	
	TO COPY " USE BELOW FORMAT
	"AT+QHTTPCFG=\"contextid\",1\r\n"
***********************************************************************************************************************/
    char* temp_ptr;
    long l_num_temp;
    char temp_char[5],i;
    temp_ptr=addres_ptr.ptr_location;
    if(size)
    {
        while(size)
       {
           (*temp_ptr)=(*string_ptr);
           temp_ptr+=1;
           string_ptr+=1;
           addres_ptr.ptr_location+=1;
           size--;
           if(addres_ptr.size>0)
           addres_ptr.size--;
           else
               return(addres_ptr);
           if((*string_ptr)=='\0')
               break;
//           if(size==0)
//               break;

       }
    }
    else
    {
        if((*string_ptr)=='\0')
        {
            i=0;
            l_num_temp=l_num;
            while(l_num_temp>0)
            {
		if(l_num_temp>0)
                i+=1;
                temp_char[i]=((l_num_temp%10)+0x30);
                l_num_temp/=10;

            }
            //i=0;
            if(l_num==0)
            {
                (*temp_ptr)=0x30;
                temp_ptr+=1;
                addres_ptr.ptr_location+=1;
                if(addres_ptr.size>0)
                addres_ptr.size--;
                else
                    return(addres_ptr);
            }
            else
            {
                for(;i>0;--i)
                {
                    (*temp_ptr)=temp_char[i];
                   //l_num/=10;
                    temp_ptr+=1;
                    addres_ptr.ptr_location+=1;
                    if(addres_ptr.size>0)
                    addres_ptr.size--;
                    else
                        return(addres_ptr);
                   // i-=1;

                }
            }
        }
        else if(l_num==0)
        {
            while(1)
            {
                (*temp_ptr)=(*string_ptr);
                temp_ptr+=1;
                string_ptr+=1;
                addres_ptr.ptr_location+=1;
                if(addres_ptr.size>0)
                addres_ptr.size--;
                else
                    return(addres_ptr);
                if((*string_ptr)=='\0')
                    break;
            }

        }
    }
    return(addres_ptr);

}
